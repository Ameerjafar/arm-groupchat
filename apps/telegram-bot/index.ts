import { Telegraf, session } from "telegraf";
import { MyContext } from "./types/context";
import { config } from "./config/config";
import { registerWalletCommands } from "./commands/walletCommands";
import { registerFundCommands } from "./commands/fundCommands";
import { registerGeneralCommands } from "./commands/generalCommands";
import { registerEventHandlers } from "./handlers/eventHandlers";
import { registerErrorHandlers } from "./middleware/errorMiddleware";
import { registerContributorCommands } from "./commands/contributeCommands";

console.log("üîÑ Initializing bot...");

const bot = new Telegraf<MyContext>(config.botToken);
console.log("this is bot token", config.botToken);
bot.use(session());

console.log("üìù Registering commands...");

console.log("  ‚Üí Registering wallet commands...");
registerWalletCommands(bot);
console.log("  ‚úì Wallet commands registered");

console.log("  ‚Üí Registering fund commands...");
registerFundCommands(bot);
console.log("  ‚úì Fund commands registered");

console.log("  ‚Üí Registering contributor commands...");
registerContributorCommands(bot);
console.log("  ‚úì Contributor commands registered");

console.log("  ‚Üí Registering general commands...");
registerGeneralCommands(bot);
console.log("  ‚úì General commands registered");

console.log("  ‚Üí Registering event handlers...");
registerEventHandlers(bot);
console.log("  ‚úì Event handlers registered");

console.log("  ‚Üí Registering error handlers...");
registerErrorHandlers(bot);
console.log("  ‚úì Error handlers registered");

console.log("üöÄ Launching bot...");
console.log(bot.botInfo?.username);
bot.launch();

console.log("‚úÖ Bot launch initiated successfully!");
console.log(`ü§ñ Bot username: @${bot.botInfo?.id || 'unknown'}`);

process.once("SIGINT", () => {
  console.log("‚ö†Ô∏è SIGINT received, stopping bot...");
  bot.stop("SIGINT");
});

process.once("SIGTERM", () => {
  console.log("‚ö†Ô∏è SIGTERM received, stopping bot...");
  bot.stop("SIGTERM");
});
